document.addEventListener('DOMContentLoaded', async () => {
    reloadTable();
});
function updateAccountsTable(accounts) {
    const tableBody = document.querySelector('#accounts-table tbody');
    tableBody.innerHTML = '';

    accounts.forEach(account => {
        const row = document.createElement('tr');

        const idCell = document.createElement('td');
        idCell.textContent = account.accountId 
        row.appendChild(idCell);

        const nameCell = document.createElement('td');
        nameCell.textContent = account.familyName; 
        row.appendChild(nameCell);

        const emailCell = document.createElement('td');
        emailCell.textContent = account.email; 
        row.appendChild(emailCell);
        
        const phoneCell = document.createElement('td');
        phoneCell.textContent = account.phone; 
        row.appendChild(phoneCell);

        const vehiclesCell = document.createElement('td');
        vehiclesCell.className = "vehicles-list";


        const actionsCell = document.createElement('td');
        actionsCell.className = 'action-buttons';

        const editButton = document.createElement('button');
        editButton.setAttribute("class", "btn btn-discovery rounded-3 btn-sm edit-btn");
        editButton.innerHTML='<i class="bi bi-pencil-square"></i> Edit'
        editButton.setAttribute("style", "margin-right: 5px;");
       
        editButton.onclick = () => {
            var accountModal = new bootstrap.Modal(document.getElementById('accountModal'));
            document.getElementById('family-name').value = account.familyName;
            document.getElementById('contact-email').value = account.email;
            document.getElementById('contact-phone').value = account.phone;
            accountModal.show();
        };
        actionsCell.appendChild(editButton);

        const deleteButton = document.createElement('button');
        deleteButton.setAttribute("class", "btn btn-danger rounded-3 btn-sm");
        deleteButton.innerHTML='<i class="bi bi-trash"></i> Delete'

        deleteButton.onclick = () => {
            if (confirm(`Are you sure you want to delete account ID ${account.accountId}?`)) {
                deleteAccount(account.accountId);
            }
        };
        actionsCell.appendChild(deleteButton);

        row.appendChild(actionsCell);

        tableBody.appendChild(row);
    });
}

async function reloadTable() {
    try {
        const response = await fetch('https://localhost:5001/api/account');
        if (!response.ok) {
            throw new Error('Network response was not 200');
        }
        const result = await response.json();
        accounts = result.$values; 
        updateAccountsTable(accounts);
    } catch (error) {
        console.error('Error fetching accounts.', error);
    }
}

async function deleteAccount(accountId) {
    try {
        const response = await fetch(`https://localhost:5001/api/account/${accountId}`, {
            method: 'DELETE',
        });

        if (!response.ok) {
            throw new Error('Network response was not 200');
        }
        else{
            reloadTable();
        }

    } catch (error) {
        console.error('Error deleting account.', error);
    }
}



